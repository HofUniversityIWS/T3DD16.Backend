plugin.tx_sessions {
	view {
		templateRootPaths {
			100 = {$plugin.tx_sessions.view.templateRootPath}
		}

		partialRootPaths {
			100 = {$plugin.tx_sessions.view.partialRootPath}
		}

		layoutRootPaths {
			100 = {$plugin.tx_sessions.view.layoutRootPath}
		}
	}

	persistence {
		storagePid = {$plugin.tx_sessions.persistence.storagePid}
		classes {
			TYPO3\Sessions\Domain\Model\Session {
				newRecordStoragePid = {$plugin.tx_sessions.persistence.newRecordStoragePid}
				mapping {
					tableName = tx_sessions_domain_model_session
					recordType = TYPO3\Sessions\Domain\Model\Session
				}
				subclasses {
					TYPO3\Sessions\Domain\Model\AcceptedSession = TYPO3\Sessions\Domain\Model\AcceptedSession
				}
			}
			TYPO3\Sessions\Domain\Model\AcceptedSession {
				newRecordStoragePid = {$plugin.tx_sessions.persistence.newRecordStoragePid}
				mapping {
					tableName = tx_sessions_domain_model_session
					recordType = TYPO3\Sessions\Domain\Model\AcceptedSession
				}
				subclasses {
					TYPO3\Sessions\Domain\Model\ScheduledSession = TYPO3\Sessions\Domain\Model\ScheduledSession
				}
			}
			TYPO3\Sessions\Domain\Model\ScheduledSession {
				newRecordStoragePid = {$plugin.tx_sessions.persistence.newRecordStoragePid}
				mapping {
					tableName = tx_sessions_domain_model_session
					recordType = TYPO3\Sessions\Domain\Model\ScheduledSession
				}
			}
			TYPO3\Sessions\Domain\Model\Topic {
				newRecordStoragePid = {$plugin.tx_sessions.persistence.newRecordStoragePid}
			}
			TYPO3\Sessions\Domain\Model\Vote {
				newRecordStoragePid = {$plugin.tx_sessions.persistence.newRecordStoragePid}
			}
			TYPO3\Sessions\Domain\Model\Room {
				newRecordStoragePid = {$plugin.tx_sessions.persistence.newRecordStoragePid}
			}
		}
	}

	view {
		defaultPid = auto
	}

	mvc {
		throwPageNotFoundExceptionIfActionCantBeResolved = 1
	}

	features {
		skipDefaultArguments = 1
	}

	settings {

	}
}
